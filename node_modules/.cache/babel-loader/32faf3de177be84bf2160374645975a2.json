{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacheng/Desktop/CodingProjects/Tenzies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  /**\n  * Challenge: Check the dice array for these winning conditions:\n  * 1. All dice are held, and\n  * 2. all dice have the same value\n  * \n  * If both conditions are true, set `tenzies` to true and log\n  * \"You won!\" to the console\n  */\n\n  React.useEffect(() => {\n    dice.map(die => die.isHeld && count(array_uniqe(dice)));\n  }, [dice]);\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(prevDice => prevDice.map(die => {\n      return die.isHeld ? die : generateNewDie();\n    }));\n  }\n\n  function holdDice(id) {\n    return setDice(prevDice => prevDice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    holdDice: () => holdDice(die.id),\n    value: die.value,\n    isHeld: die.isHeld\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XiqIFNm697VlPsyNE3Z+bevZzOM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","nanoid","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","useEffect","map","die","isHeld","count","array_uniqe","generateNewDie","value","Math","ceil","random","id","newDice","i","push","rollDice","prevDice","holdDice","diceElements"],"sources":["/Users/joshuacheng/Desktop/CodingProjects/Tenzies/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Die from \"./components/Die\"\nimport { nanoid } from \"nanoid\"\n\n\nexport default function App() {\n\n \n  const [dice,setDice] = React.useState(allNewDice())\n  const [tenzies,setTenzies] = React.useState(false)\n  /**\n * Challenge: Check the dice array for these winning conditions:\n * 1. All dice are held, and\n * 2. all dice have the same value\n * \n * If both conditions are true, set `tenzies` to true and log\n * \"You won!\" to the console\n */\n  React.useEffect(() => {\n    dice.map(die => die.isHeld && (count(array_uniqe(dice))) )\n  },[dice])\n\n  function generateNewDie(){\n    return(\n      {value:Math.ceil(Math.random() * 6),\n        isHeld:false,\n        id: nanoid()}\n    )\n  }\n  function allNewDice() {\n    const newDice = []\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie())\n    }\n    return newDice\n  }\n\n  function rollDice()\n  {\n    setDice(prevDice => prevDice.map(die => {\n        return(\n          die.isHeld ?  \n          die :\n          generateNewDie()\n        )\n    }))\n  }\n  function holdDice(id){\n    return(\n      setDice(prevDice => prevDice.map(die => {\n        return die.id === id ? \n        {...die, isHeld: !die.isHeld} : \n        die\n      }))\n    )\n  }\n  const diceElements = dice.map(die => \n  <Die key={die.id} holdDice={() => holdDice(die.id)} value={die.value} isHeld={die.isHeld} />)\n  \n  return (\n    <main>\n      <h1 className=\"title\">Tenzies</h1>\n      <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n      <div className=\"dice-container\">\n        {diceElements}\n      </div>\n      <button className=\"roll-dice\"onClick={rollDice}>Roll</button>\n    </main>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAGA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAG5B,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,KAAK,CAACM,QAAN,CAAeC,UAAU,EAAzB,CAAvB;EACA,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBT,KAAK,CAACM,QAAN,CAAe,KAAf,CAA7B;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACEN,KAAK,CAACU,SAAN,CAAgB,MAAM;IACpBN,IAAI,CAACO,GAAL,CAASC,GAAG,IAAIA,GAAG,CAACC,MAAJ,IAAeC,KAAK,CAACC,WAAW,CAACX,IAAD,CAAZ,CAApC;EACD,CAFD,EAEE,CAACA,IAAD,CAFF;;EAIA,SAASY,cAAT,GAAyB;IACvB,OACE;MAACC,KAAK,EAACC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAAP;MACEP,MAAM,EAAC,KADT;MAEEQ,EAAE,EAAEnB,MAAM;IAFZ,CADF;EAKD;;EACD,SAASK,UAAT,GAAsB;IACpB,MAAMe,OAAO,GAAG,EAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3BD,OAAO,CAACE,IAAR,CAAaR,cAAc,EAA3B;IACD;;IACD,OAAOM,OAAP;EACD;;EAED,SAASG,QAAT,GACA;IACEpB,OAAO,CAACqB,QAAQ,IAAIA,QAAQ,CAACf,GAAT,CAAaC,GAAG,IAAI;MACpC,OACEA,GAAG,CAACC,MAAJ,GACAD,GADA,GAEAI,cAAc,EAHhB;IAKH,CANmB,CAAb,CAAP;EAOD;;EACD,SAASW,QAAT,CAAkBN,EAAlB,EAAqB;IACnB,OACEhB,OAAO,CAACqB,QAAQ,IAAIA,QAAQ,CAACf,GAAT,CAAaC,GAAG,IAAI;MACtC,OAAOA,GAAG,CAACS,EAAJ,KAAWA,EAAX,GACP,EAAC,GAAGT,GAAJ;QAASC,MAAM,EAAE,CAACD,GAAG,CAACC;MAAtB,CADO,GAEPD,GAFA;IAGD,CAJmB,CAAb,CADT;EAOD;;EACD,MAAMgB,YAAY,GAAGxB,IAAI,CAACO,GAAL,CAASC,GAAG,iBACjC,QAAC,GAAD;IAAkB,QAAQ,EAAE,MAAMe,QAAQ,CAACf,GAAG,CAACS,EAAL,CAA1C;IAAoD,KAAK,EAAET,GAAG,CAACK,KAA/D;IAAsE,MAAM,EAAEL,GAAG,CAACC;EAAlF,GAAUD,GAAG,CAACS,EAAd;IAAA;IAAA;IAAA;EAAA,QADqB,CAArB;EAGA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,OAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAG,SAAS,EAAC,cAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGO;IADH;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAQ,SAAS,EAAC,WAAlB;MAA6B,OAAO,EAAEH,QAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAhEuBtB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}