{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacheng/Desktop/CodingProjects/Tenzies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport style from \"./style.css\";\nimport Die from \"./components/Die\";\n/**\n * Challenge:\n * \n * Create state to hold our array of numbers. (Initialize\n * the state by calling our `allNewDice` function so it \n * loads all new dice as soon as the app loads)\n * \n * Map over the state numbers array to generate our array\n * of Die elements and render those in place of our\n * manually-written 10 Die elements.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState({\n    value: allNewDice(),\n    isHeld: false\n  });\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.value.push(Math.ceil(Math.random() * 6));\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(prevDice => allNewDice());\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 40\n  }, this));\n  console.log(diceElements);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DU4EuLGVyAkM6KtHSAreU/wNQRk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","style","Die","App","dice","setDice","useState","value","allNewDice","isHeld","newDice","i","push","Math","ceil","random","rollDice","prevDice","diceElements","map","die","console","log"],"sources":["/Users/joshuacheng/Desktop/CodingProjects/Tenzies/src/App.js"],"sourcesContent":["import React from \"react\"\nimport style from \"./style.css\"\nimport Die from \"./components/Die\"\n\n/**\n * Challenge:\n * \n * Create state to hold our array of numbers. (Initialize\n * the state by calling our `allNewDice` function so it \n * loads all new dice as soon as the app loads)\n * \n * Map over the state numbers array to generate our array\n * of Die elements and render those in place of our\n * manually-written 10 Die elements.\n */\nexport default function App() {\n  const [dice,setDice] = React.useState({value:allNewDice(),isHeld:false})\n  function allNewDice() {\n    const newDice = []\n    for (let i = 0; i < 10; i++) {\n      newDice.value.push(Math.ceil(Math.random() * 6))\n    }\n    return newDice\n  }\n  function rollDice()\n  {\n    setDice(prevDice => allNewDice())\n  }\n  const diceElements = dice.map(die => <Die value={die} />)\n  console.log(diceElements)\n  return (\n    <main>\n      <div className=\"dice-container\">\n        {diceElements}\n      </div>\n      <button className=\"roll-dice\"onClick={rollDice}>Roll</button>\n    </main>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,KAAK,CAACM,QAAN,CAAe;IAACC,KAAK,EAACC,UAAU,EAAjB;IAAoBC,MAAM,EAAC;EAA3B,CAAf,CAAvB;;EACA,SAASD,UAAT,GAAsB;IACpB,MAAME,OAAO,GAAG,EAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3BD,OAAO,CAACH,KAAR,CAAcK,IAAd,CAAmBC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAAnB;IACD;;IACD,OAAOL,OAAP;EACD;;EACD,SAASM,QAAT,GACA;IACEX,OAAO,CAACY,QAAQ,IAAIT,UAAU,EAAvB,CAAP;EACD;;EACD,MAAMU,YAAY,GAAGd,IAAI,CAACe,GAAL,CAASC,GAAG,iBAAI,QAAC,GAAD;IAAK,KAAK,EAAEA;EAAZ;IAAA;IAAA;IAAA;EAAA,QAAhB,CAArB;EACAC,OAAO,CAACC,GAAR,CAAYJ,YAAZ;EACA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGA;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAQ,SAAS,EAAC,WAAlB;MAA6B,OAAO,EAAEF,QAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAvBuBb,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}